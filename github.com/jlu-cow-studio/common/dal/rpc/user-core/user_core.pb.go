// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: user_core.proto

package user_core

import (
	base "github.com/jlu-cow-studio/common/dal/rpc/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Username string        `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string        `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserLoginReq) Reset() {
	*x = UserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReq) ProtoMessage() {}

func (x *UserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReq.ProtoReflect.Descriptor instead.
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{0}
}

func (x *UserLoginReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserLoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserLoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Token string        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserLoginRes) Reset() {
	*x = UserLoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginRes) ProtoMessage() {}

func (x *UserLoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginRes.ProtoReflect.Descriptor instead.
func (*UserLoginRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{1}
}

func (x *UserLoginRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserLoginRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Province string `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	Role     string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	City     string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	District string `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfo) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserInfo *UserInfo     `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{3}
}

func (x *UserRegisterReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserRegisterReq) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UserRegisterRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UserRegisterRes) Reset() {
	*x = UserRegisterRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterRes) ProtoMessage() {}

func (x *UserRegisterRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterRes.ProtoReflect.Descriptor instead.
func (*UserRegisterRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{4}
}

func (x *UserRegisterRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{5}
}

func (x *UserInfoReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

type UserInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserInfo *UserInfo     `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *UserInfoRes) Reset() {
	*x = UserInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRes) ProtoMessage() {}

func (x *UserInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRes.ProtoReflect.Descriptor instead.
func (*UserInfoRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{6}
}

func (x *UserInfoRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserInfoRes) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UserAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Role string        `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UserAuthReq) Reset() {
	*x = UserAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthReq) ProtoMessage() {}

func (x *UserAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthReq.ProtoReflect.Descriptor instead.
func (*UserAuthReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{7}
}

func (x *UserAuthReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserAuthReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UserAuthRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UserAuthRes) Reset() {
	*x = UserAuthRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthRes) ProtoMessage() {}

func (x *UserAuthRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthRes.ProtoReflect.Descriptor instead.
func (*UserAuthRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{8}
}

func (x *UserAuthRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

type FollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	FollowerId  string        `protobuf:"bytes,2,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	FollowingId string        `protobuf:"bytes,3,opt,name=following_id,json=followingId,proto3" json:"following_id,omitempty"`
	Action      string        `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *FollowReq) Reset() {
	*x = FollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowReq) ProtoMessage() {}

func (x *FollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowReq.ProtoReflect.Descriptor instead.
func (*FollowReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{9}
}

func (x *FollowReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowReq) GetFollowerId() string {
	if x != nil {
		return x.FollowerId
	}
	return ""
}

func (x *FollowReq) GetFollowingId() string {
	if x != nil {
		return x.FollowingId
	}
	return ""
}

func (x *FollowReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type FollowRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *FollowRes) Reset() {
	*x = FollowRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowRes) ProtoMessage() {}

func (x *FollowRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowRes.ProtoReflect.Descriptor instead.
func (*FollowRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{10}
}

func (x *FollowRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

type FollowingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserId   string        `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page     int32         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32         `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *FollowingReq) Reset() {
	*x = FollowingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowingReq) ProtoMessage() {}

func (x *FollowingReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowingReq.ProtoReflect.Descriptor instead.
func (*FollowingReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{11}
}

func (x *FollowingReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowingReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowingReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FollowingReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FollowingRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base       *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TotalCount int32         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPage  int32         `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Users      []*UserInfo   `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *FollowingRes) Reset() {
	*x = FollowingRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowingRes) ProtoMessage() {}

func (x *FollowingRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowingRes.ProtoReflect.Descriptor instead.
func (*FollowingRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{12}
}

func (x *FollowingRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowingRes) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *FollowingRes) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *FollowingRes) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type FollowersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserId   string        `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page     int32         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32         `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *FollowersReq) Reset() {
	*x = FollowersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowersReq) ProtoMessage() {}

func (x *FollowersReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowersReq.ProtoReflect.Descriptor instead.
func (*FollowersReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{13}
}

func (x *FollowersReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowersReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowersReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FollowersReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FollowersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base       *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TotalCount int32         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPage  int32         `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Users      []*UserInfo   `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *FollowersRes) Reset() {
	*x = FollowersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowersRes) ProtoMessage() {}

func (x *FollowersRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowersRes.ProtoReflect.Descriptor instead.
func (*FollowersRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{14}
}

func (x *FollowersRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowersRes) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *FollowersRes) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *FollowersRes) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type FollowCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *base.BaseReq `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserId string        `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FollowCountReq) Reset() {
	*x = FollowCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowCountReq) ProtoMessage() {}

func (x *FollowCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowCountReq.ProtoReflect.Descriptor instead.
func (*FollowCountReq) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{15}
}

func (x *FollowCountReq) GetBase() *base.BaseReq {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowCountReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FollowCountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *base.BaseRes `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	FollowingCount int32         `protobuf:"varint,2,opt,name=following_count,json=followingCount,proto3" json:"following_count,omitempty"`
	FollowerCount  int32         `protobuf:"varint,3,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`
}

func (x *FollowCountRes) Reset() {
	*x = FollowCountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_core_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowCountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowCountRes) ProtoMessage() {}

func (x *FollowCountRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_core_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowCountRes.ProtoReflect.Descriptor instead.
func (*FollowCountRes) Descriptor() ([]byte, []int) {
	return file_user_core_proto_rawDescGZIP(), []int{16}
}

func (x *FollowCountRes) GetBase() *base.BaseRes {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *FollowCountRes) GetFollowingCount() int32 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

func (x *FollowCountRes) GetFollowerCount() int32 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

var File_user_core_proto protoreflect.FileDescriptor

var file_user_core_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x56, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x22, 0x83, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63,
	0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63,
	0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f,
	0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75,
	0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3d, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75,
	0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x8a,
	0x01, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0c,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75,
	0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x5b, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x92, 0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0x89, 0x06, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x6a, 0x6c,
	0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x25, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x12, 0x23, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77,
	0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x6a, 0x6c, 0x75,
	0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x09,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x6a, 0x6c, 0x75, 0x5f,
	0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0b, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x6a, 0x6c, 0x75,
	0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6a, 0x6c, 0x75, 0x5f, 0x63, 0x6f, 0x77, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a,
	0x6c, 0x75, 0x2d, 0x63, 0x6f, 0x77, 0x2d, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_core_proto_rawDescOnce sync.Once
	file_user_core_proto_rawDescData = file_user_core_proto_rawDesc
)

func file_user_core_proto_rawDescGZIP() []byte {
	file_user_core_proto_rawDescOnce.Do(func() {
		file_user_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_core_proto_rawDescData)
	})
	return file_user_core_proto_rawDescData
}

var file_user_core_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_user_core_proto_goTypes = []interface{}{
	(*UserLoginReq)(nil),    // 0: jlu_cow_studio.user_core.UserLoginReq
	(*UserLoginRes)(nil),    // 1: jlu_cow_studio.user_core.UserLoginRes
	(*UserInfo)(nil),        // 2: jlu_cow_studio.user_core.UserInfo
	(*UserRegisterReq)(nil), // 3: jlu_cow_studio.user_core.UserRegisterReq
	(*UserRegisterRes)(nil), // 4: jlu_cow_studio.user_core.UserRegisterRes
	(*UserInfoReq)(nil),     // 5: jlu_cow_studio.user_core.UserInfoReq
	(*UserInfoRes)(nil),     // 6: jlu_cow_studio.user_core.UserInfoRes
	(*UserAuthReq)(nil),     // 7: jlu_cow_studio.user_core.UserAuthReq
	(*UserAuthRes)(nil),     // 8: jlu_cow_studio.user_core.UserAuthRes
	(*FollowReq)(nil),       // 9: jlu_cow_studio.user_core.FollowReq
	(*FollowRes)(nil),       // 10: jlu_cow_studio.user_core.FollowRes
	(*FollowingReq)(nil),    // 11: jlu_cow_studio.user_core.FollowingReq
	(*FollowingRes)(nil),    // 12: jlu_cow_studio.user_core.FollowingRes
	(*FollowersReq)(nil),    // 13: jlu_cow_studio.user_core.FollowersReq
	(*FollowersRes)(nil),    // 14: jlu_cow_studio.user_core.FollowersRes
	(*FollowCountReq)(nil),  // 15: jlu_cow_studio.user_core.FollowCountReq
	(*FollowCountRes)(nil),  // 16: jlu_cow_studio.user_core.FollowCountRes
	(*base.BaseReq)(nil),    // 17: jlu_cow_studio.base.BaseReq
	(*base.BaseRes)(nil),    // 18: jlu_cow_studio.base.BaseRes
}
var file_user_core_proto_depIdxs = []int32{
	17, // 0: jlu_cow_studio.user_core.UserLoginReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 1: jlu_cow_studio.user_core.UserLoginRes.base:type_name -> jlu_cow_studio.base.BaseRes
	17, // 2: jlu_cow_studio.user_core.UserRegisterReq.base:type_name -> jlu_cow_studio.base.BaseReq
	2,  // 3: jlu_cow_studio.user_core.UserRegisterReq.userInfo:type_name -> jlu_cow_studio.user_core.UserInfo
	18, // 4: jlu_cow_studio.user_core.UserRegisterRes.base:type_name -> jlu_cow_studio.base.BaseRes
	17, // 5: jlu_cow_studio.user_core.UserInfoReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 6: jlu_cow_studio.user_core.UserInfoRes.base:type_name -> jlu_cow_studio.base.BaseRes
	2,  // 7: jlu_cow_studio.user_core.UserInfoRes.userInfo:type_name -> jlu_cow_studio.user_core.UserInfo
	17, // 8: jlu_cow_studio.user_core.UserAuthReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 9: jlu_cow_studio.user_core.UserAuthRes.base:type_name -> jlu_cow_studio.base.BaseRes
	17, // 10: jlu_cow_studio.user_core.FollowReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 11: jlu_cow_studio.user_core.FollowRes.base:type_name -> jlu_cow_studio.base.BaseRes
	17, // 12: jlu_cow_studio.user_core.FollowingReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 13: jlu_cow_studio.user_core.FollowingRes.base:type_name -> jlu_cow_studio.base.BaseRes
	2,  // 14: jlu_cow_studio.user_core.FollowingRes.users:type_name -> jlu_cow_studio.user_core.UserInfo
	17, // 15: jlu_cow_studio.user_core.FollowersReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 16: jlu_cow_studio.user_core.FollowersRes.base:type_name -> jlu_cow_studio.base.BaseRes
	2,  // 17: jlu_cow_studio.user_core.FollowersRes.users:type_name -> jlu_cow_studio.user_core.UserInfo
	17, // 18: jlu_cow_studio.user_core.FollowCountReq.base:type_name -> jlu_cow_studio.base.BaseReq
	18, // 19: jlu_cow_studio.user_core.FollowCountRes.base:type_name -> jlu_cow_studio.base.BaseRes
	0,  // 20: jlu_cow_studio.user_core.UserCoreService.UserLogin:input_type -> jlu_cow_studio.user_core.UserLoginReq
	3,  // 21: jlu_cow_studio.user_core.UserCoreService.UserRegister:input_type -> jlu_cow_studio.user_core.UserRegisterReq
	5,  // 22: jlu_cow_studio.user_core.UserCoreService.UserInfo:input_type -> jlu_cow_studio.user_core.UserInfoReq
	7,  // 23: jlu_cow_studio.user_core.UserCoreService.UserAuth:input_type -> jlu_cow_studio.user_core.UserAuthReq
	9,  // 24: jlu_cow_studio.user_core.UserCoreService.Follow:input_type -> jlu_cow_studio.user_core.FollowReq
	11, // 25: jlu_cow_studio.user_core.UserCoreService.Following:input_type -> jlu_cow_studio.user_core.FollowingReq
	13, // 26: jlu_cow_studio.user_core.UserCoreService.Followers:input_type -> jlu_cow_studio.user_core.FollowersReq
	15, // 27: jlu_cow_studio.user_core.UserCoreService.FollowCount:input_type -> jlu_cow_studio.user_core.FollowCountReq
	1,  // 28: jlu_cow_studio.user_core.UserCoreService.UserLogin:output_type -> jlu_cow_studio.user_core.UserLoginRes
	4,  // 29: jlu_cow_studio.user_core.UserCoreService.UserRegister:output_type -> jlu_cow_studio.user_core.UserRegisterRes
	6,  // 30: jlu_cow_studio.user_core.UserCoreService.UserInfo:output_type -> jlu_cow_studio.user_core.UserInfoRes
	8,  // 31: jlu_cow_studio.user_core.UserCoreService.UserAuth:output_type -> jlu_cow_studio.user_core.UserAuthRes
	10, // 32: jlu_cow_studio.user_core.UserCoreService.Follow:output_type -> jlu_cow_studio.user_core.FollowRes
	12, // 33: jlu_cow_studio.user_core.UserCoreService.Following:output_type -> jlu_cow_studio.user_core.FollowingRes
	14, // 34: jlu_cow_studio.user_core.UserCoreService.Followers:output_type -> jlu_cow_studio.user_core.FollowersRes
	16, // 35: jlu_cow_studio.user_core.UserCoreService.FollowCount:output_type -> jlu_cow_studio.user_core.FollowCountRes
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_user_core_proto_init() }
func file_user_core_proto_init() {
	if File_user_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowingRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_core_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowCountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_core_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_core_proto_goTypes,
		DependencyIndexes: file_user_core_proto_depIdxs,
		MessageInfos:      file_user_core_proto_msgTypes,
	}.Build()
	File_user_core_proto = out.File
	file_user_core_proto_rawDesc = nil
	file_user_core_proto_goTypes = nil
	file_user_core_proto_depIdxs = nil
}
